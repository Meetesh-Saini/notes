import gmpy2
from Crypto.Util.number import long_to_bytes, GCD
import sys



n1 = 134911871887517178033238365489457849896511224820806220485165634649446082842486963513523569381804484509516337682500673640748361808603104958456704393258814696346719962690883579629720440609324423868921040659373056425829893242712314152118609420055847463460956081700485441610607589589596086890473183272431428447019

e1 = 53437

c1 = 92527676391478744984809955618647155935621408418550529843258048058190277528325787890212091643814499159266318550684136752418076929078515242575178854845618609291751876876352008029071375089947577351306764599363478146945504155478598820051700026548060662424903695069657088613371409935636402335249812278020441626102

# Albus' message to Tom

n2 = 134911871887517178033238365489457849896511224820806220485165634649446082842486963513523569381804484509516337682500673640748361808603104958456704393258814696346719962690883579629720440609324423868921040659373056425829893242712314152118609420055847463460956081700485441610607589589596086890473183272431428447019

e2 = 32141

c2 = 131341326183991512239150067643663116028691962688009001114584979060922796370861068522453238418741812151805007142075592215412160510674000996165989363191515080924806233056468127847756342656960846476235369031163339636720080974863417972189010848706963372900646788701923897460858395515466058075007471638369905969250


n = n1

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)


def neg_pow(a, b, n):
    assert b < 0
    assert GCD(a, n) == 1
    res = int(gmpy2.invert(a, n))
    res = pow(res, -b, n)
    return res


def common_modulus(e1, e2, n, c1, c2):
    g, a, b = egcd(e1, e2)
    if a < 0:
        c1 = neg_pow(c1, a, n)
    else:
        c1 = pow(c1, a, n)
    if b < 0:
        c2 = neg_pow(c2, b, n)
    else:
        c2 = pow(c2, b, n)
    ct = c1 * c2 % n
    m = int(gmpy2.iroot(ct, g)[0])
    return m


if GCD(e1, e2) != 1:
    print("impossible")
    exit(1)

deciphered_message = common_modulus(e1, e2, n, c1, c2)
deciphered_bytes = long_to_bytes(deciphered_message)

print("[+] Recovered message:")
print(deciphered_message)
print("[+] Recovered bytes:")
print(deciphered_bytes)
